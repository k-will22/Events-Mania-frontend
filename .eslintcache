[{"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Main.js":"1","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/AddEvent.js":"2","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/App.js":"3","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Favorite.js":"4","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Login.js":"5","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Recommended.js":"6","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Event.js":"7","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/NavBar.js":"8","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Show.js":"9","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Profile.js":"10","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/reportWebVitals.js":"11","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/index.js":"12"},{"size":5077,"mtime":1613190133578,"results":"13","hashOfConfig":"14"},{"size":5485,"mtime":1613667419691,"results":"15","hashOfConfig":"14"},{"size":3568,"mtime":1613181773938,"results":"16","hashOfConfig":"14"},{"size":1900,"mtime":1613190365308,"results":"17","hashOfConfig":"14"},{"size":4082,"mtime":1613192449584,"results":"18","hashOfConfig":"14"},{"size":1672,"mtime":1613190473743,"results":"19","hashOfConfig":"14"},{"size":3288,"mtime":1613502692522,"results":"20","hashOfConfig":"14"},{"size":708,"mtime":1613004803544,"results":"21","hashOfConfig":"14"},{"size":1561,"mtime":1613190270892,"results":"22","hashOfConfig":"14"},{"size":5890,"mtime":1613187885585,"results":"23","hashOfConfig":"14"},{"size":362,"mtime":1612326395339,"results":"24","hashOfConfig":"14"},{"size":540,"mtime":1612390507469,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"4fjgzy",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Main.js",["53","54","55","56"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/AddEvent.js",["57"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/App.js",[],["58","59"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Favorite.js",["60","61","62","63","64"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Login.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Recommended.js",["65"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Event.js",["66","67"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/NavBar.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Show.js",["68"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Profile.js",["69","70","71","72"],"import React, { useState } from 'react';\n\nfunction Profile({user, artists, genres, favoriteArtists, favoriteGenres, setFavoriteArtists, setFavoriteGenres, location, setLocation, userId}) {\n    const [favArtists, setFavArtists] = useState(\"\")\n    const [favGenres, setFavGenres] = useState(\"\")\n    const [newLocation, setNewLocation] = useState(\"\")\n\n    const newUser = {\n        location: newLocation\n    }\n    \n\n\n    const newArtist = {\n        user_id: userId,\n        artist_id: favArtists\n    }\n\n    const newGenre = {\n        user_id: userId,\n        genre_id: favGenres\n    }\n\n    function handleSetGenre(event) {\n        setFavGenres(event.target.value)\n    }\n\n    function handleSetArtist(event) {\n        setFavArtists(event.target.value)\n    }\n\n    function handleNewArtist(event) {\n        event.preventDefault()\n\n        if (newArtist.artist_id == 0) {\n            return null\n        }\n        \n        fetch(\"http://localhost:3000/favorite_artists\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newArtist),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                setFavoriteArtists([...favoriteArtists, data])\n            })\n    }\n\n    function handleNewGenre(event) {\n        event.preventDefault()\n\n        if (newGenre.genre_id == 0) {\n            return null\n        }\n        \n        fetch(\"http://localhost:3000/favorite_genres\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newGenre),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                setFavoriteGenres([...favoriteGenres, data])\n            })\n    }\n\n    function handleRemoveArtist(event) {\n        const artistId = event.target.value\n\n        console.log(artistId)\n\n        fetch(`http://localhost:3000/favorite_artists/${artistId}`, {\n            method: \"DELETE\",\n        })\n            .then (r=> r.json())\n            .then(data => {\n                console.log(data)\n            })\n            fetch(`http://localhost:3000/users/${userId}`)\n            .then(response => response.json())\n            .then(data => {\n            const newArtistArr = data.favorite_artists.filter(f => f.id != artistId)\n            setFavoriteArtists(newArtistArr)\n            })\n    }\n\n    function handleRemoveGenre(event) {\n        const genreId = event.target.value\n\n        fetch(`http://localhost:3000/favorite_genres/${genreId}`, {\n            method: \"DELETE\",\n        })\n            .then (r=> r.json())\n            .then(data => {\n                console.log(data)\n            })\n            fetch(`http://localhost:3000/users/${userId}`)\n            .then(response => response.json())\n            .then(data => {\n                const newGenreArr = data.favorite_genres.filter(f => f.id != genreId)\n                setFavoriteGenres(newGenreArr)\n            })\n    }\n\n    function handleLocation(event) {\n        event.preventDefault()\n\n        fetch(`http://localhost:3000/users/${userId}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newUser),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                console.log(data)\n            })\n            setLocation(newLocation)\n            setNewLocation(\"\")\n    }\n\n    const fArtists = favoriteArtists.map(a => {\n        return <h4 key={a.id}>{a.artist.name} <button className=\"red button2\" value={a.id} onClick={handleRemoveArtist}>X</button></h4>\n     })\n \n     const fGenres = favoriteGenres.map(g => {\n         return <h4 key={g.id}>{g.genre.name} <button className=\"red button2\" value={g.id} onClick={handleRemoveGenre}>X</button></h4>\n      })\n\n    const sortedArtists = artists.sort((a,b) => {\n        return a.name.localeCompare(b.name);\n    })\n\n    const sortedGenres = genres.sort((a,b) => {\n        return a.name.localeCompare(b.name);\n    })\n\n    const artistList = sortedArtists.map(a => <option key={a.id} value={a.id}>{a.name}</option>)\n\n    const genreList = sortedGenres.map(g => <option key={g.id} value={g.id}>{g.name}</option>)\n\n        return (\n            <div>\n            <h1>Profile</h1>\n            <br></br>\n            <div className=\"event2\">\n            <h2>{user.username}</h2>\n            <h3 className=\"underline\">Location:</h3>\n            <h3>{location}</h3>\n            <form onSubmit={handleLocation}>\n            <input \n                type=\"text\" \n                onChange={event => setNewLocation(event.target.value)}\n                value={newLocation}>\n            </input>&nbsp;\n            <input type=\"submit\" value=\"Change Location\"></input>\n            </form>\n            <br></br>\n            <br></br>\n            <h3 className=\"underline\">Favorite Artists:</h3>\n            {fArtists}\n            <label>\n                <select onChange={handleSetArtist}>\n                    <option value=\"0\">Choose Artist</option>\n                    {artistList}\n                </select>&nbsp;\n                <input type=\"submit\" value=\"Add Artist\" onClick={handleNewArtist}></input>\n            </label>\n            <br></br>\n            <br></br>\n            <br></br>\n            <h3 className=\"underline\">Favorite Genres:</h3>\n            {fGenres}\n            <label>\n                <select onChange={handleSetGenre}>\n                    <option value=\"0\">Choose Genre</option>\n                    {genreList}\n                </select>&nbsp;\n                <input type=\"submit\" value=\"Add Genre\" onClick={handleNewGenre}></input>\n            </label>\n            <br></br>\n            <br></br>\n            </div>\n            <br></br>\n            </div>\n        )\n}\n\nexport default Profile","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/reportWebVitals.js",[],["73","74"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/index.js",[],{"ruleId":"75","severity":1,"message":"76","line":27,"column":49,"nodeType":"77","messageId":"78","endLine":27,"endColumn":51},{"ruleId":"75","severity":1,"message":"76","line":64,"column":32,"nodeType":"77","messageId":"78","endLine":64,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":109,"column":38,"nodeType":"81","endLine":109,"endColumn":93},{"ruleId":"75","severity":1,"message":"76","line":154,"column":24,"nodeType":"77","messageId":"78","endLine":154,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":64,"column":19,"nodeType":"77","messageId":"78","endLine":64,"endColumn":21},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"75","severity":1,"message":"76","line":13,"column":34,"nodeType":"77","messageId":"78","endLine":13,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":17,"column":8,"nodeType":"88","endLine":17,"endColumn":10,"suggestions":"89"},{"ruleId":"75","severity":1,"message":"90","line":30,"column":49,"nodeType":"77","messageId":"78","endLine":30,"endColumn":51},{"ruleId":"75","severity":1,"message":"76","line":43,"column":24,"nodeType":"77","messageId":"78","endLine":43,"endColumn":26},{"ruleId":"79","severity":1,"message":"80","line":43,"column":39,"nodeType":"81","endLine":43,"endColumn":100},{"ruleId":"79","severity":1,"message":"80","line":33,"column":38,"nodeType":"81","endLine":33,"endColumn":93},{"ruleId":"75","severity":1,"message":"90","line":78,"column":30,"nodeType":"77","messageId":"78","endLine":78,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":94,"column":35,"nodeType":"81","endLine":94,"endColumn":90},{"ruleId":"79","severity":1,"message":"80","line":27,"column":38,"nodeType":"81","endLine":27,"endColumn":97},{"ruleId":"75","severity":1,"message":"76","line":35,"column":33,"nodeType":"77","messageId":"78","endLine":35,"endColumn":35},{"ruleId":"75","severity":1,"message":"76","line":55,"column":31,"nodeType":"77","messageId":"78","endLine":55,"endColumn":33},{"ruleId":"75","severity":1,"message":"90","line":87,"column":73,"nodeType":"77","messageId":"78","endLine":87,"endColumn":75},{"ruleId":"75","severity":1,"message":"90","line":105,"column":75,"nodeType":"77","messageId":"78","endLine":105,"endColumn":77},{"ruleId":"82","replacedBy":"91"},{"ruleId":"84","replacedBy":"92"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["95"],"Expected '!==' and instead saw '!='.",["93"],["94"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [userId]",{"range":"98","text":"99"},[505,507],"[userId]"]