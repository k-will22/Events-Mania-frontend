[{"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Main.js":"1","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/AddEvent.js":"2","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/App.js":"3","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Favorite.js":"4","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Login.js":"5","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Recommended.js":"6","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Event.js":"7","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/NavBar.js":"8","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Show.js":"9","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Profile.js":"10","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/reportWebVitals.js":"11","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/index.js":"12"},{"size":5077,"mtime":1613190133578,"results":"13","hashOfConfig":"14"},{"size":5485,"mtime":1613667419691,"results":"15","hashOfConfig":"14"},{"size":3568,"mtime":1613181773938,"results":"16","hashOfConfig":"14"},{"size":1900,"mtime":1614299823532,"results":"17","hashOfConfig":"14"},{"size":4082,"mtime":1613192449584,"results":"18","hashOfConfig":"14"},{"size":1672,"mtime":1613190473743,"results":"19","hashOfConfig":"14"},{"size":3288,"mtime":1613502692522,"results":"20","hashOfConfig":"14"},{"size":708,"mtime":1613004803544,"results":"21","hashOfConfig":"14"},{"size":1561,"mtime":1613190270892,"results":"22","hashOfConfig":"14"},{"size":5890,"mtime":1613187885585,"results":"23","hashOfConfig":"14"},{"size":362,"mtime":1612326395339,"results":"24","hashOfConfig":"14"},{"size":540,"mtime":1612390507469,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"4fjgzy",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Main.js",["55","56","57","58"],"import './Main.css';\nimport React, { useEffect, useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Event from \"./Event\";\nimport Moment from 'react-moment';\n\nfunction Main({events, userId, location, user, setEvents}) {\n    const local = location\n    const [searchTerm, setSearchTerm] = useState(\"\")\n    const [term, setTerm] = useState(\"\")\n    const [city, setCity] = useState(local)\n    const [userTerms, setUserTerms] = useState([])\n    const filterArray = []\n\n    events.map(e => {\n        return filterArray.push(e)\n    })\n    \n    function handleSearch(event) {\n        event.preventDefault()\n\n        if (term === \"\") {\n            return setSearchTerm(\"\")\n        }\n        setSearchTerm(term)\n\n        const termMatch = userTerms.find(t => t == term)\n\n        if (termMatch) {\n            return null\n        }\n\n        const newTerm = {\n            term: term,\n            user_id: user.id\n        }\n\n        fetch(\"http://localhost:3000/searched_terms\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newTerm),\n          })\n            .then((r) => r.json())\n            .then(createdTerm => {\n                setUserTerms([...userTerms, createdTerm.term])\n        })\n            setTerm(\"\")\n    }\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/users/${userId}`)\n        .then((r) => r.json())\n        .then(userInfo => {\n           const userSearch = userInfo.searched_terms.map(t => {\n               return t.term\n           })\n           setUserTerms(userSearch)\n    })\n    }, [userId])\n\n    function handleCity(event) {\n        if (event.target.value == 0) {\n            return setCity(location)\n        }\n        else {\n        return setCity(event.target.value)\n        }\n    }\n\n    const uniqueSet = new Set(filterArray)\n    const uniqueArray = [...uniqueSet]\n\n    const sortedEvents = uniqueArray.sort((a,b) => {\n        return a.date.replace(/\\D/g, '') - b.date.replace(/\\D/g, '')})\n\n    const localEvents = sortedEvents.filter(e => {\n        return e.location.toLowerCase() === city.toLowerCase()\n    })\n\n    const filterEvents = localEvents.filter(e => {\n        return e.artist.name.toLowerCase().includes(searchTerm.toLowerCase()) || \n        e.genre.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n        e.venue.toLowerCase().includes(searchTerm.toLowerCase())\n    })\n\n    const eventList = filterEvents.map(e => {\n        return <Event \n            e={e} \n            key={e.id} \n            userId={userId} \n            user={user} \n            events={events} \n            setEvents={setEvents} />\n    })\n\n    const cityEvents = sortedEvents.filter(e => {\n        return e.location.toLowerCase() === location.toLowerCase()\n    })\n\n    const termFilter = cityEvents.filter(e => userTerms.some(t => e.artist.name.toLowerCase() === t.toLowerCase()))\n        \n    const termEvents = termFilter.map(e => {\n        return (\n            <div key={e.id}>\n            <div className=\"event\">\n            <br></br>\n            {e.photo === \"\" ? null : <img className=\"img2\" src={e.photo} alt=\"artist image\"></img>}\n            <h3>{e.artist.name}</h3>\n            <h4>{e.tour}</h4>\n            <div>Location: {e.location}</div>\n            <div>Venue: {e.venue}</div>\n            <div><Moment format=\"ddd MMM DD, YYYY\">{e.date}</Moment></div>\n            <Link to={`/show/${e.id}`}>Event Page</Link>\n            <br></br>\n            <br></br>\n            </div>\n            <br></br>\n            </div>\n        )\n    })\n  \n      return (\n        <div className=\"one\">\n          <div>\n            <h1>Events</h1>\n            <div className=\"search\">\n            <label>&nbsp;&nbsp;<strong>Change Location</strong></label>&nbsp;\n            <select onChange={handleCity}>\n                <option value=\"0\">Choose Location</option>\n                <option value=\"Amsterdam\">Amsterdam</option>\n                <option value=\"Austin\">Austin</option>\n                <option value=\"Boston\">Boston</option>\n                <option value=\"Las Vegas\">Las Vegas</option>\n                <option value=\"Miami\">Miami</option>\n                <option value=\"Nashville\">Nashville</option>\n                <option value=\"New York\">New York</option>\n            </select>\n            <br></br>\n            <br></br>\n            <form onSubmit={handleSearch} >\n            <label><strong>Search by Artist/Genre/Venue</strong></label>&nbsp;\n            <input\n                onChange={(event) => setTerm(event.target.value)}\n                value={term}\n                type=\"text\" \n                autoComplete=\"off\"></input>&nbsp;\n            <input type=\"submit\"></input>\n            </form>\n            </div>\n            <div className=\"two\">{eventList}</div>\n            </div>\n            {userTerms == \"\" || termEvents.length === 0 ? null : <div className=\"three\">\n                <h1>Based On Recent Searches</h1>\n                <div>{termEvents}</div>\n            </div>}\n        </div>\n      )\n}\n\nexport default Main","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/AddEvent.js",["59"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/App.js",[],["60","61"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Favorite.js",["62","63","64","65","66"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Login.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Recommended.js",["67"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Event.js",["68","69"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/NavBar.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Show.js",["70"],"import React, { useEffect, useState } from 'react';\nimport Moment from 'react-moment';\n\nfunction Show() {\nconst [event, setEvent] = useState([])\nconst [loaded, setLoaded] = useState(false)\n\nlet url = window.location.pathname.split('/')\nlet id = url[2]\n\nuseEffect(() => {\n    fetch(`http://localhost:3000/events/${id}`)\n    .then(response => response.json())\n    .then(data => {\n        setEvent(data)\n        setLoaded(true)\n    })\n    }, [id])\n\n\n    return (\n        <div>\n        <br></br>\n        {loaded ?\n        <div className=\"event3\">\n        <br></br>\n        {event.photo === \"\" ? null : <img className=\"img1\" src={event.photo} alt=\"artist image\"></img>}\n        <h1>{event.artist.name}</h1>\n        <h2>{event.tour}</h2>\n        <h3>Venue: {event.venue}</h3>\n        <h3><Moment format=\"ddd MMM DD, YYYY\">{event.date}</Moment></h3>\n        {event.band_page === \"\" ? null : <a target=\"_blank\" rel=\"noreferrer\" href={event.band_page}>Artist Site</a>}\n        {event.band_page === \"\" ? null : <br></br>}\n        {event.bank_page === \"\" ? null : <br></br>}\n        {event.venue_page === \"\" ? null : <a target=\"_blank\" rel=\"noreferrer\" href={event.venue_page}>Venue Site</a>}\n        {event.venue_page === \"\" ? null : <br></br>}\n        {event.venue_page === \"\" ? null : <br></br>}\n        {event.ticket_purchase_page === \"\" ? null : <a target=\"_blank\" rel=\"noreferrer\" href={event.ticket_purchase_page}>Purchase Tickets</a>}\n        <br></br>\n        <br></br>\n        </div>\n        : null }\n        <br></br>\n        </div>\n    )\n}\n\nexport default Show","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Profile.js",["71","72","73","74"],"import React, { useState } from 'react';\n\nfunction Profile({user, artists, genres, favoriteArtists, favoriteGenres, setFavoriteArtists, setFavoriteGenres, location, setLocation, userId}) {\n    const [favArtists, setFavArtists] = useState(\"\")\n    const [favGenres, setFavGenres] = useState(\"\")\n    const [newLocation, setNewLocation] = useState(\"\")\n\n    const newUser = {\n        location: newLocation\n    }\n    \n\n\n    const newArtist = {\n        user_id: userId,\n        artist_id: favArtists\n    }\n\n    const newGenre = {\n        user_id: userId,\n        genre_id: favGenres\n    }\n\n    function handleSetGenre(event) {\n        setFavGenres(event.target.value)\n    }\n\n    function handleSetArtist(event) {\n        setFavArtists(event.target.value)\n    }\n\n    function handleNewArtist(event) {\n        event.preventDefault()\n\n        if (newArtist.artist_id == 0) {\n            return null\n        }\n        \n        fetch(\"http://localhost:3000/favorite_artists\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newArtist),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                setFavoriteArtists([...favoriteArtists, data])\n            })\n    }\n\n    function handleNewGenre(event) {\n        event.preventDefault()\n\n        if (newGenre.genre_id == 0) {\n            return null\n        }\n        \n        fetch(\"http://localhost:3000/favorite_genres\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newGenre),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                setFavoriteGenres([...favoriteGenres, data])\n            })\n    }\n\n    function handleRemoveArtist(event) {\n        const artistId = event.target.value\n\n        console.log(artistId)\n\n        fetch(`http://localhost:3000/favorite_artists/${artistId}`, {\n            method: \"DELETE\",\n        })\n            .then (r=> r.json())\n            .then(data => {\n                console.log(data)\n            })\n            fetch(`http://localhost:3000/users/${userId}`)\n            .then(response => response.json())\n            .then(data => {\n            const newArtistArr = data.favorite_artists.filter(f => f.id != artistId)\n            setFavoriteArtists(newArtistArr)\n            })\n    }\n\n    function handleRemoveGenre(event) {\n        const genreId = event.target.value\n\n        fetch(`http://localhost:3000/favorite_genres/${genreId}`, {\n            method: \"DELETE\",\n        })\n            .then (r=> r.json())\n            .then(data => {\n                console.log(data)\n            })\n            fetch(`http://localhost:3000/users/${userId}`)\n            .then(response => response.json())\n            .then(data => {\n                const newGenreArr = data.favorite_genres.filter(f => f.id != genreId)\n                setFavoriteGenres(newGenreArr)\n            })\n    }\n\n    function handleLocation(event) {\n        event.preventDefault()\n\n        fetch(`http://localhost:3000/users/${userId}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newUser),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                console.log(data)\n            })\n            setLocation(newLocation)\n            setNewLocation(\"\")\n    }\n\n    const fArtists = favoriteArtists.map(a => {\n        return <h4 key={a.id}>{a.artist.name} <button className=\"red button2\" value={a.id} onClick={handleRemoveArtist}>X</button></h4>\n     })\n \n     const fGenres = favoriteGenres.map(g => {\n         return <h4 key={g.id}>{g.genre.name} <button className=\"red button2\" value={g.id} onClick={handleRemoveGenre}>X</button></h4>\n      })\n\n    const sortedArtists = artists.sort((a,b) => {\n        return a.name.localeCompare(b.name);\n    })\n\n    const sortedGenres = genres.sort((a,b) => {\n        return a.name.localeCompare(b.name);\n    })\n\n    const artistList = sortedArtists.map(a => <option key={a.id} value={a.id}>{a.name}</option>)\n\n    const genreList = sortedGenres.map(g => <option key={g.id} value={g.id}>{g.name}</option>)\n\n        return (\n            <div>\n            <h1>Profile</h1>\n            <br></br>\n            <div className=\"event2\">\n            <h2>{user.username}</h2>\n            <h3 className=\"underline\">Location:</h3>\n            <h3>{location}</h3>\n            <form onSubmit={handleLocation}>\n            <input \n                type=\"text\" \n                onChange={event => setNewLocation(event.target.value)}\n                value={newLocation}>\n            </input>&nbsp;\n            <input type=\"submit\" value=\"Change Location\"></input>\n            </form>\n            <br></br>\n            <br></br>\n            <h3 className=\"underline\">Favorite Artists:</h3>\n            {fArtists}\n            <label>\n                <select onChange={handleSetArtist}>\n                    <option value=\"0\">Choose Artist</option>\n                    {artistList}\n                </select>&nbsp;\n                <input type=\"submit\" value=\"Add Artist\" onClick={handleNewArtist}></input>\n            </label>\n            <br></br>\n            <br></br>\n            <br></br>\n            <h3 className=\"underline\">Favorite Genres:</h3>\n            {fGenres}\n            <label>\n                <select onChange={handleSetGenre}>\n                    <option value=\"0\">Choose Genre</option>\n                    {genreList}\n                </select>&nbsp;\n                <input type=\"submit\" value=\"Add Genre\" onClick={handleNewGenre}></input>\n            </label>\n            <br></br>\n            <br></br>\n            </div>\n            <br></br>\n            </div>\n        )\n}\n\nexport default Profile","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/reportWebVitals.js",[],["75","76"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/index.js",[],{"ruleId":"77","severity":1,"message":"78","line":27,"column":49,"nodeType":"79","messageId":"80","endLine":27,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":64,"column":32,"nodeType":"79","messageId":"80","endLine":64,"endColumn":34},{"ruleId":"81","severity":1,"message":"82","line":109,"column":38,"nodeType":"83","endLine":109,"endColumn":93},{"ruleId":"77","severity":1,"message":"78","line":154,"column":24,"nodeType":"79","messageId":"80","endLine":154,"endColumn":26},{"ruleId":"77","severity":1,"message":"78","line":64,"column":19,"nodeType":"79","messageId":"80","endLine":64,"endColumn":21},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"77","severity":1,"message":"78","line":13,"column":34,"nodeType":"79","messageId":"80","endLine":13,"endColumn":36},{"ruleId":"88","severity":1,"message":"89","line":17,"column":8,"nodeType":"90","endLine":17,"endColumn":10,"suggestions":"91"},{"ruleId":"77","severity":1,"message":"92","line":30,"column":49,"nodeType":"79","messageId":"80","endLine":30,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":43,"column":24,"nodeType":"79","messageId":"80","endLine":43,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":43,"column":39,"nodeType":"83","endLine":43,"endColumn":100},{"ruleId":"81","severity":1,"message":"82","line":33,"column":38,"nodeType":"83","endLine":33,"endColumn":93},{"ruleId":"77","severity":1,"message":"92","line":78,"column":30,"nodeType":"79","messageId":"80","endLine":78,"endColumn":32},{"ruleId":"81","severity":1,"message":"82","line":94,"column":35,"nodeType":"83","endLine":94,"endColumn":90},{"ruleId":"81","severity":1,"message":"82","line":27,"column":38,"nodeType":"83","endLine":27,"endColumn":97},{"ruleId":"77","severity":1,"message":"78","line":35,"column":33,"nodeType":"79","messageId":"80","endLine":35,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":55,"column":31,"nodeType":"79","messageId":"80","endLine":55,"endColumn":33},{"ruleId":"77","severity":1,"message":"92","line":87,"column":73,"nodeType":"79","messageId":"80","endLine":87,"endColumn":75},{"ruleId":"77","severity":1,"message":"92","line":105,"column":75,"nodeType":"79","messageId":"80","endLine":105,"endColumn":77},{"ruleId":"84","replacedBy":"93"},{"ruleId":"86","replacedBy":"94"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.","ArrayExpression",["97"],"Expected '!==' and instead saw '!='.",["95"],["96"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [userId]",{"range":"100","text":"101"},[505,507],"[userId]"]