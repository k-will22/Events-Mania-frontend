[{"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/reportWebVitals.js":"1","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/App.js":"2","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Main.js":"3","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/index.js":"4","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/NavBar.js":"5","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Favorite.js":"6","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Show.js":"7","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Login.js":"8","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Account.js":"9"},{"size":362,"mtime":1612326395339,"results":"10","hashOfConfig":"11"},{"size":2444,"mtime":1612498650890,"results":"12","hashOfConfig":"11"},{"size":1126,"mtime":1612413434280,"results":"13","hashOfConfig":"11"},{"size":540,"mtime":1612390507469,"results":"14","hashOfConfig":"11"},{"size":338,"mtime":1612454210868,"results":"15","hashOfConfig":"11"},{"size":1113,"mtime":1612418403615,"results":"16","hashOfConfig":"11"},{"size":693,"mtime":1612405249368,"results":"17","hashOfConfig":"11"},{"size":1817,"mtime":1612498233429,"results":"18","hashOfConfig":"11"},{"size":4907,"mtime":1612498662906,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4fjgzy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/reportWebVitals.js",[],["42","43"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/App.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Main.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/index.js",[],["44","45"],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/NavBar.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Favorite.js",["46"],"import React, { useEffect, useState } from 'react';\n\nfunction Favorite() {\n    const [favs, setFavs] = useState([])\n\n    useEffect(() => {\n        fetch(\"http://localhost:3000/favorite_events\")\n        .then(response => response.json())\n        .then(setFavs)\n    }, [])\n\n    function handleUnfavorite(event) {\n        const favId = event.target.value\n\n        fetch(`http://localhost:3000/favorite_events/${favId}`, {\n        method: \"DELETE\",\n    })\n        .then (r=> r.json())\n        .then(data => {\n            console.log(data)\n        })\n\n        const removeFav = favs.filter(f => f.id != favId)\n        setFavs(removeFav)\n        \n    }\n    \n    const favList = favs.map(f => {\n        return (\n        <div key={f.id}>\n        <h1>{f.artist.name}</h1>\n        <h3>Tour: {f.event.tour}</h3>\n        <h3>Venue: {f.event.venue}</h3>\n        <h3>Date: {f.event.date}</h3>\n        <button value={f.id} onClick={handleUnfavorite}>Unfavorite</button>\n        </div>\n        )\n    })\n\n    return (\n        <div>\n        <h1>Favorite Events</h1>\n        {favList}\n        </div>\n    )\n}\n\nexport default Favorite","/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Show.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Login.js",[],"/Users/keithwilliams/Development/code/Mod5/events-mania-frontend/src/Account.js",["47","48","49","50","51","52","53"],"import React, { useEffect, useState } from 'react';\n\nfunction Account({user, artists, genres, favoriteArtists, favoriteGenres, setFavoriteArtists, setFavoriteGenres, location, setLocation}) {\n    const [id, setId] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [favArtists, setFavArtists] = useState(\"\")\n    const [favGenres, setFavGenres] = useState(\"\")\n    const [newLocation, setNewLocation] = useState(\"\")\n\n    const userId = 1\n\n    const newUser = {\n        location: newLocation\n    }\n    \n    const fArtists = favoriteArtists.map(a => {\n       return <h3>{a.artist.name} <button value={a.id} onClick={handleRemoveArtist}>Remove</button></h3>\n    })\n\n    const fGenres = favoriteGenres.map(g => {\n        return <h3>{g.genre.name} <button value={g.id} onClick={handleRemoveGenre}>Remove</button></h3>\n     })\n\n    const newArtist = {\n        user_id: userId,\n        artist_id: favArtists\n    }\n\n    const newGenre = {\n        user_id: userId,\n        genre_id: favGenres\n    }\n\n    function handleSetGenre(event) {\n        setFavGenres(event.target.value)\n    }\n\n    function handleSetArtist(event) {\n        setFavArtists(event.target.value)\n    }\n\n    function handleNewArtist(event) {\n        event.preventDefault()\n        \n        fetch(\"http://localhost:3000/favorite_artists\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newArtist),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                setFavoriteArtists([...favoriteArtists, data])\n            })\n    }\n\n    function handleNewGenre(event) {\n        event.preventDefault()\n        \n        fetch(\"http://localhost:3000/favorite_genres\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newGenre),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                setFavoriteGenres([...favoriteGenres, data])\n            })\n    }\n\n    function handleRemoveArtist(event) {\n        const artistId = event.target.value\n\n        fetch(`http://localhost:3000/favorite_artists/${artistId}`, {\n            method: \"DELETE\",\n        })\n            .then (r=> r.json())\n            .then(data => {\n                console.log(data)\n            })\n            const newArtistArr = user.favorite_artists.filter(f => f.id != artistId)\n            setFavoriteArtists(newArtistArr)\n    }\n\n    function handleRemoveGenre(event) {\n        const genreId = event.target.value\n\n        fetch(`http://localhost:3000/favorite_genres/${genreId}`, {\n            method: \"DELETE\",\n        })\n            .then (r=> r.json())\n            .then(data => {\n                console.log(data)\n            })\n            const newGenreArr = user.favorite_genres.filter(f => f.id != genreId)\n            setFavoriteGenres(newGenreArr)\n    }\n\n    function handleLocation(event) {\n        event.preventDefault()\n\n        fetch(`http://localhost:3000/users/${userId}`, {\n            method: \"PATCH\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newUser),\n          })\n            .then((r) => r.json())\n            .then(data => {\n                console.log(data)\n            })\n            setLocation(newLocation)\n            setNewLocation(\"\")\n    }\n\n    const artistList = artists.map(a => <option value={a.id}>{a.name}</option>)\n\n    const genreList = genres.map(g => <option value={g.id}>{g.name}</option>)\n\n        return (\n            <div>\n            <h1>{user.username}</h1>\n            <h3>LOCATION: {location}</h3>\n            <form onSubmit={handleLocation}>\n            <input \n                type=\"text\" \n                onChange={event => setNewLocation(event.target.value)}\n                value={newLocation}>\n            </input>&nbsp;\n            <input type=\"submit\" value=\"Change Location\"></input>\n            </form>\n            <br></br>\n            <h3>FAVORITE ARTISTS:</h3>\n            {fArtists}\n            <label>\n                <select onChange={handleSetArtist}>\n                    <option value=\"\" >Choose Artist</option>\n                    {artistList}\n                </select>&nbsp;\n                <input type=\"submit\" value=\"Add Artist\" onClick={handleNewArtist}></input>\n            </label>\n            <br></br>\n            <br></br>\n            <h3>FAVORITE GENRES:</h3>\n            {fGenres}\n            <label>\n                <select onChange={handleSetGenre}>\n                    <option value=\"\" >Choose Genre</option>\n                    {genreList}\n                </select>&nbsp;\n                <input type=\"submit\" value=\"Add Genre\" onClick={handleNewGenre}></input>\n            </label>\n            </div>\n        )\n\n}\n\nexport default Account",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":23,"column":49,"nodeType":"62","messageId":"63","endLine":23,"endColumn":51},{"ruleId":"64","severity":1,"message":"65","line":1,"column":17,"nodeType":"66","messageId":"67","endLine":1,"endColumn":26},{"ruleId":"64","severity":1,"message":"68","line":4,"column":12,"nodeType":"66","messageId":"67","endLine":4,"endColumn":14},{"ruleId":"64","severity":1,"message":"69","line":4,"column":16,"nodeType":"66","messageId":"67","endLine":4,"endColumn":21},{"ruleId":"64","severity":1,"message":"70","line":5,"column":12,"nodeType":"66","messageId":"67","endLine":5,"endColumn":20},{"ruleId":"64","severity":1,"message":"71","line":5,"column":22,"nodeType":"66","messageId":"67","endLine":5,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":84,"column":73,"nodeType":"62","messageId":"63","endLine":84,"endColumn":75},{"ruleId":"60","severity":1,"message":"61","line":98,"column":71,"nodeType":"62","messageId":"63","endLine":98,"endColumn":73},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]